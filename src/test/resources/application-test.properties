# Configuration pour les tests avec MySQL
spring.config.import=file:./.env[.properties],optional:file:./.local.env[.properties]
spring.application.name=CaniCampusConnect-API
spring.profiles.active=test

# Configuration MySQL pour les tests (même DB que dev ou DB de test séparée)
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME_TEST:${DB_NAME}}?serverTimezone=UTC&createDatabaseIfNotExist=true
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Configuration Hibernate pour les tests
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:create-drop}
spring.sql.init.platform=${SQL_FILE_NAME}
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=${EXECUTE_SQL:never}
spring.jackson.time-zone=UTC

# Configuration JWT pour les tests
jwt.secret=${JWT_SECRET}

# Configuration des fichiers pour les tests
file.default.accepted.types=image/png,image/jpeg,image/jpg,application/pdf
public.upload.folder=${PUBLIC_UPLOAD_FOLDER:./test-uploads}
private.upload.folder=${PRIVATE_UPLOAD_FOLDER:./test-uploads}

# Configuration statique pour les tests
spring.web.resources.static-locations=file:./test-uploads/,classpath:/static/
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Configuration email pour les tests
spring.mail.host=${EMAIL_HOST:localhost}
spring.mail.port=${EMAIL_PORT:25}
spring.mail.username=${EMAIL_USER:test}
spring.mail.password=${EMAIL_PASSWORD:test}

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# URLs pour les tests
app.base-url=http://localhost:8080
app.frontend-url=http://localhost:4200

# Configuration des tokens pour les tests
app.security.token.expiration-hours=24
app.security.token.max-emails-per-hour=3

# Désactiver certains warnings pour les tests
spring.jpa.open-in-view=false
server.error.include-message=always

# Utiliser le dialect MySQL recommandé
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect